[alias]

	# View abbreviated SHA, description, and history graph of the latest 20 commits
	lg = log --pretty=oneline -n 20 --graph --abbrev-commit

	# View the current working tree status using the short format
	stat = status -s

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Find commits by source code
	fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

	# Remove branches that have already been merged with master
	# a.k.a. ‘delete merged’
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

[color]

	# Use colors in Git commands that are capable of colored output when outputting to the terminal. 
	ui = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold 			# line info
	old = red 				# deletions
	new = green 				# additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan
